package com.example.demo.designpattern.templatepattern;

/**
 * 模板方法模式
 　　定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。 模板方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。
 通俗的说的就是有很多相同的步骤的，在某一些地方可能有一些差别适合于这种模式，
 如大话设计模式中说到的考试场景中，每个人的试卷都是一样的，只有答案不一样。
 这种场景就适合于模板方法模式。我这次自己写的是一个汽车启动的过程，每一种汽车启动的过程都基本是一样的流程，
 无非是这一过程中存在一些细小差别。

 实现实例
 在这个实现实例中，将创建一个Game抽象类，它定义了一个模板方法设置为final的操作，因此它不能被覆盖。
 Cricket 和 Football 是扩展Game并覆盖它的方法的具体类。
 */
public class Notice {
}
