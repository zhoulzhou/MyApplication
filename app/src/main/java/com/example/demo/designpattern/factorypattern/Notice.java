package com.example.demo.designpattern.factorypattern;

/**
 *
 *
 工厂模式

 抽象工厂模式是工厂方法模式的升级版本，他用来创建一组相关或者相互依赖的对象。
 他与工厂方法模式的区别就在于，工厂方法模式针对的是一个产品等级结构；
 而抽象工厂模式则是针对的多个产品等级结构。在编程中，通常一个产品结构，
 表现为一个接口或者抽象类，也就是说，工厂方法模式提供的所有产品都是衍生自同一个接口或抽象类，而抽象工厂模式所提供的产品则是衍生自不同的接口或抽象类。

 工厂方法模式：
 一个抽象产品类，可以派生出多个具体产品类。
 一个抽象工厂类，可以派生出多个具体工厂类。
 每个具体工厂类只能创建一个具体产品类的实例。
 抽象工厂模式：
 多个抽象产品类，每个抽象产品类可以派生出多个具体产品类。
 一个抽象工厂类，可以派生出多个具体工厂类。
 每个具体工厂类可以创建多个具体产品类的实例。
 区别：
 工厂方法模式只有一个抽象产品类，而抽象工厂模式有多个。
 工厂方法模式的具体工厂类只能创建一个具体产品类的实例，而抽象工厂模式可以创建多个。
 *
 */
public class Notice {
}
